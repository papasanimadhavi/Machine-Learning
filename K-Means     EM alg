#8 K-Means EM algorithm
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
from sklearn import datasets
from sklearn import preprocessing
from sklearn.cluster import KMeans
from sklearn.mixture import GaussianMixture

iris=datasets.load_iris()
X=pd.DataFrame(iris.data)
X.columns=['Sepal_Length','Sepal_width','Petal_Length','Petal_width']
Y=pd.DataFrame(iris.target)
Y.columns=['Targets']

model=KMeans(n_clusters=3)
model.fit(X)
plt.figure(figsize=(14,14))
colormap=np.array(['red','lime','black'])

plt.subplot(2,2,1)
plt.scatter(X.Petal_Length,X.Petal_width,c=colormap[Y.Targets],s=40)
plt.title('Real Clusters')
plt.xlabel('Petal_Length')
plt.ylabel('Petal_width')

plt.subplot(2,2,2)
plt.scatter(X.Petal_Length,X.Petal_width,c=colormap[model.labels_],s=40)
plt.title('KMeans Clusters')
plt.xlabel('Petal_Length')
plt.ylabel('Petal_width')

scaler=preprocessing.StandardScaler()
scaler.fit(X)
xsa=scaler.transform(X)
xs=pd.DataFrame(xsa,columns=X.columns)

gmm=GaussianMixture(n_components=3)
gmm.fit(xs)
gmm_y=gmm.predict(xs)


plt.subplot(2,2,3)
plt.scatter(X.Petal_Length,X.Petal_width,c=colormap[gmm_y],s=40)
plt.title('GMM Clusters')
plt.xlabel('Petal_Length')
plt.ylabel('Petal_width')
